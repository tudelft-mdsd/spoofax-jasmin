module trans/analysis/types/push-types/Conversion.generated

imports
  
  lib/runtime/nabl/-
  lib/runtime/task/-
  lib/runtime/types/-
  lib/runtime/properties/-
  lib/runtime/relations/-

imports

  include/JasminXT
  analysis/types/constraints
  
signature constructors
  
  
  
rules // functions 
  

rules // relations
  

rules // rules
  
  create-push-type-task(|ctx) :
    I2L() -> <task-create-id(|ctx,[x54])> x54
    where 
      x54 := <type-is(|ctx)> [Long()]
  
  create-push-type-task(|ctx) :
    I2F() -> <task-create-id(|ctx,[x55])> x55
    where 
      x55 := <type-is(|ctx)> [Float()]
  
  create-push-type-task(|ctx) :
    I2D() -> <task-create-id(|ctx,[x56])> x56
    where 
      x56 := <type-is(|ctx)> [Double()]
  
  create-push-type-task(|ctx) :
    L2F() -> <task-create-id(|ctx,[x57])> x57
    where 
      x57 := <type-is(|ctx)> [Float()]
  
  create-push-type-task(|ctx) :
    L2D() -> <task-create-id(|ctx,[x58])> x58
    where 
      x58 := <type-is(|ctx)> [Double()]
  
  create-push-type-task(|ctx) :
    F2D() -> <task-create-id(|ctx,[x59])> x59
    where 
      x59 := <type-is(|ctx)> [Double()]
  
  create-push-type-task(|ctx) :
    I2B() -> <task-create-id(|ctx,[x60])> x60
    where 
      x60 := <type-is(|ctx)> [Byte()]
  
  create-push-type-task(|ctx) :
    I2S() -> <task-create-id(|ctx,[x61])> x61
    where 
      x61 := <type-is(|ctx)> [Short()]
  
  create-push-type-task(|ctx) :
    I2C() -> <task-create-id(|ctx,[x62])> x62
    where 
      x62 := <type-is(|ctx)> [Char()]
  
  create-push-type-task(|ctx) :
    L2I() -> <task-create-id(|ctx,[x63])> x63
    where 
      x63 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    F2I() -> <task-create-id(|ctx,[x64])> x64
    where 
      x64 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    F2L() -> <task-create-id(|ctx,[x65])> x65
    where 
      x65 := <type-is(|ctx)> [Long()]
  
  create-push-type-task(|ctx) :
    D2I() -> <task-create-id(|ctx,[x66])> x66
    where 
      x66 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    D2L() -> <task-create-id(|ctx,[x67])> x67
    where 
      x67 := <type-is(|ctx)> [Long()]
  
  create-push-type-task(|ctx) :
    D2F() -> <task-create-id(|ctx,[x68])> x68
    where 
      x68 := <type-is(|ctx)> [Float()]
  

rules // projections
  
