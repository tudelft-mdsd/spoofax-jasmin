module analysis/types/complex-constraints/Arithmetic

imports
  include/JasminXT
  analysis/names/properties
  analysis/types/constraints

rules
  cc-r-match-int(|at) = where( rest := <fresh-var>
      ; first  := <safe-repeat(![<fresh-var> | <id>] | <dec> at)> [Int()])
    ; !(first, rest)

  // IINC and IINC_W
  complex-constraint: instr@name#([VarNum(vn), _]) -> [nc*, nr*]
    where <string-starts-with(|"IINC")> name
    with i-in  := <get-in-stack> instr
       ; i-out := <get-out-stack> instr
       ; vn'   := <dec-string-to-int> vn
       ; stack := <cc-r-match-int(|vn')>
       ; nr*   := [ CEq(<var-rename-hack> TypeVar(i-in),  stack) // pop-reg-type
                  , CEq(<var-rename-hack> TypeVar(i-out), stack) // push-reg-type
                  ]
       ; nc*   := [ CEq(TypeVar(i-in), TypeVar(i-out)) ]