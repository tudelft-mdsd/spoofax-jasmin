module trans/analysis/types/push-types/Conversion.generated

imports
  
  lib/runtime/nabl/-
  lib/runtime/task/-
  lib/runtime/types/-
  lib/runtime/properties/-
  lib/runtime/relations/-

imports

  include/JasminXT
  analysis/types/constraints
  
signature constructors
  
  
  
rules // functions 
  

rules // relations
  

rules // rules
  
  create-push-type-task(|ctx) :
    I2L() -> <task-create-id(|ctx,[x186])> x186
    where 
      x186 := <type-is(|ctx)> [Long()]
  
  create-push-type-task(|ctx) :
    I2F() -> <task-create-id(|ctx,[x187])> x187
    where 
      x187 := <type-is(|ctx)> [Float()]
  
  create-push-type-task(|ctx) :
    I2D() -> <task-create-id(|ctx,[x188])> x188
    where 
      x188 := <type-is(|ctx)> [Double()]
  
  create-push-type-task(|ctx) :
    L2F() -> <task-create-id(|ctx,[x189])> x189
    where 
      x189 := <type-is(|ctx)> [Float()]
  
  create-push-type-task(|ctx) :
    L2D() -> <task-create-id(|ctx,[x190])> x190
    where 
      x190 := <type-is(|ctx)> [Double()]
  
  create-push-type-task(|ctx) :
    F2D() -> <task-create-id(|ctx,[x191])> x191
    where 
      x191 := <type-is(|ctx)> [Double()]
  
  create-push-type-task(|ctx) :
    I2B() -> <task-create-id(|ctx,[x192])> x192
    where 
      x192 := <type-is(|ctx)> [Byte()]
  
  create-push-type-task(|ctx) :
    I2S() -> <task-create-id(|ctx,[x193])> x193
    where 
      x193 := <type-is(|ctx)> [Short()]
  
  create-push-type-task(|ctx) :
    I2C() -> <task-create-id(|ctx,[x194])> x194
    where 
      x194 := <type-is(|ctx)> [Char()]
  
  create-push-type-task(|ctx) :
    L2I() -> <task-create-id(|ctx,[x195])> x195
    where 
      x195 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    F2I() -> <task-create-id(|ctx,[x196])> x196
    where 
      x196 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    F2L() -> <task-create-id(|ctx,[x197])> x197
    where 
      x197 := <type-is(|ctx)> [Long()]
  
  create-push-type-task(|ctx) :
    D2I() -> <task-create-id(|ctx,[x198])> x198
    where 
      x198 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    D2L() -> <task-create-id(|ctx,[x199])> x199
    where 
      x199 := <type-is(|ctx)> [Long()]
  
  create-push-type-task(|ctx) :
    D2F() -> <task-create-id(|ctx,[x200])> x200
    where 
      x200 := <type-is(|ctx)> [Float()]
  

rules // projections
  
