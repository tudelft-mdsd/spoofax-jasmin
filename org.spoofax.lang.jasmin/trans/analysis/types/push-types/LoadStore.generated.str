module trans/analysis/types/push-types/LoadStore.generated

imports
  
  lib/runtime/nabl/-
  lib/runtime/task/-
  lib/runtime/types/-
  lib/runtime/properties/-
  lib/runtime/relations/-

imports

  include/JasminXT
  analysis/types/constraints
  
signature constructors
  
  
  
rules // functions 
  

rules // relations
  

rules // rules
  
  create-push-type-task(|ctx) :
    BIPUSH(_) -> <task-create-id(|ctx,[x230])> x230
    where 
      x230 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    SIPUSH(_) -> <task-create-id(|ctx,[x230])> x230
    where 
      x230 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    ICONST_M1() -> <task-create-id(|ctx,[x231])> x231
    where 
      x231 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    ICONST_0() -> <task-create-id(|ctx,[x231])> x231
    where 
      x231 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    ICONST_1() -> <task-create-id(|ctx,[x231])> x231
    where 
      x231 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    ICONST_2() -> <task-create-id(|ctx,[x231])> x231
    where 
      x231 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    ICONST_3() -> <task-create-id(|ctx,[x231])> x231
    where 
      x231 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    ICONST_4() -> <task-create-id(|ctx,[x231])> x231
    where 
      x231 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    ICONST_5() -> <task-create-id(|ctx,[x231])> x231
    where 
      x231 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    LCONST_0() -> <task-create-id(|ctx,[x232])> x232
    where 
      x232 := <type-is(|ctx)> [Long()]
  
  create-push-type-task(|ctx) :
    LCONST_1() -> <task-create-id(|ctx,[x232])> x232
    where 
      x232 := <type-is(|ctx)> [Long()]
  
  create-push-type-task(|ctx) :
    FCONST_0() -> <task-create-id(|ctx,[x233])> x233
    where 
      x233 := <type-is(|ctx)> [Float()]
  
  create-push-type-task(|ctx) :
    FCONST_1() -> <task-create-id(|ctx,[x233])> x233
    where 
      x233 := <type-is(|ctx)> [Float()]
  
  create-push-type-task(|ctx) :
    FCONST_2() -> <task-create-id(|ctx,[x233])> x233
    where 
      x233 := <type-is(|ctx)> [Float()]
  
  create-push-type-task(|ctx) :
    DCONST_0() -> <task-create-id(|ctx,[x234])> x234
    where 
      x234 := <type-is(|ctx)> [Double()]
  
  create-push-type-task(|ctx) :
    DCONST_1() -> <task-create-id(|ctx,[x234])> x234
    where 
      x234 := <type-is(|ctx)> [Double()]
  
  create-push-type-task(|ctx) :
    ACONST_NULL() -> <task-create-id(|ctx,[x235])> x235
    where 
      x235 := <type-is(|ctx)> [BOTTOM()]
  
  create-push-type-task(|ctx) :
    LDC(c) -> <task-create-id(|ctx,[x236])> x236
    where 
      t := <type-task(|ctx)> c;
      x236 := <type-is(|ctx); task-create-id(|ctx, [t])> [t]
  
  create-push-type-task(|ctx) :
    LDC2_W(c) -> <task-create-id(|ctx,[x236])> x236
    where 
      t := <type-task(|ctx)> c;
      x236 := <type-is(|ctx); task-create-id(|ctx, [t])> [t]
  
  create-push-type-task(|ctx) :
    LDC_W(c) -> <task-create-id(|ctx,[x236])> x236
    where 
      t := <type-task(|ctx)> c;
      x236 := <type-is(|ctx); task-create-id(|ctx, [t])> [t]
  

rules // projections
  
