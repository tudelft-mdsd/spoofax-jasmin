module trans/analysis/types/push-types/LoadStore.generated

imports
  
  lib/runtime/nabl/-
  lib/runtime/task/-
  lib/runtime/types/-
  lib/runtime/properties/-
  lib/runtime/relations/-

imports

  include/JasminXT
  analysis/types/constraints
  
signature constructors
  
  
  
rules // functions 
  

rules // relations
  

rules // rules
  
  create-push-type-task(|ctx) :
    BIPUSH(_) -> <task-create-id(|ctx,[x98])> x98
    where 
      x98 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    SIPUSH(_) -> <task-create-id(|ctx,[x98])> x98
    where 
      x98 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    ICONST_M1() -> <task-create-id(|ctx,[x99])> x99
    where 
      x99 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    ICONST_0() -> <task-create-id(|ctx,[x99])> x99
    where 
      x99 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    ICONST_1() -> <task-create-id(|ctx,[x99])> x99
    where 
      x99 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    ICONST_2() -> <task-create-id(|ctx,[x99])> x99
    where 
      x99 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    ICONST_3() -> <task-create-id(|ctx,[x99])> x99
    where 
      x99 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    ICONST_4() -> <task-create-id(|ctx,[x99])> x99
    where 
      x99 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    ICONST_5() -> <task-create-id(|ctx,[x99])> x99
    where 
      x99 := <type-is(|ctx)> [Int()]
  
  create-push-type-task(|ctx) :
    LCONST_0() -> <task-create-id(|ctx,[x100])> x100
    where 
      x100 := <type-is(|ctx)> [Long()]
  
  create-push-type-task(|ctx) :
    LCONST_1() -> <task-create-id(|ctx,[x100])> x100
    where 
      x100 := <type-is(|ctx)> [Long()]
  
  create-push-type-task(|ctx) :
    FCONST_0() -> <task-create-id(|ctx,[x101])> x101
    where 
      x101 := <type-is(|ctx)> [Float()]
  
  create-push-type-task(|ctx) :
    FCONST_1() -> <task-create-id(|ctx,[x101])> x101
    where 
      x101 := <type-is(|ctx)> [Float()]
  
  create-push-type-task(|ctx) :
    FCONST_2() -> <task-create-id(|ctx,[x101])> x101
    where 
      x101 := <type-is(|ctx)> [Float()]
  
  create-push-type-task(|ctx) :
    DCONST_0() -> <task-create-id(|ctx,[x102])> x102
    where 
      x102 := <type-is(|ctx)> [Double()]
  
  create-push-type-task(|ctx) :
    DCONST_1() -> <task-create-id(|ctx,[x102])> x102
    where 
      x102 := <type-is(|ctx)> [Double()]
  
  create-push-type-task(|ctx) :
    ACONST_NULL() -> <task-create-id(|ctx,[x103])> x103
    where 
      x103 := <type-is(|ctx)> [BOTTOM()]
  
  create-push-type-task(|ctx) :
    LDC(c) -> <task-create-id(|ctx,[x104])> x104
    where 
      t := <type-task(|ctx)> c;
      x104 := <type-is(|ctx); task-create-id(|ctx, [t])> [t]
  
  create-push-type-task(|ctx) :
    LDC2_W(c) -> <task-create-id(|ctx,[x104])> x104
    where 
      t := <type-task(|ctx)> c;
      x104 := <type-is(|ctx); task-create-id(|ctx, [t])> [t]
  
  create-push-type-task(|ctx) :
    LDC_W(c) -> <task-create-id(|ctx,[x104])> x104
    where 
      t := <type-task(|ctx)> c;
      x104 := <type-is(|ctx); task-create-id(|ctx, [t])> [t]
  

rules // projections
  
